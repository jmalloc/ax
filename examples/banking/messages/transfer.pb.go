// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: github.com/jmalloc/ax/examples/banking/messages/transfer.proto

package messages

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// StartTransfer is a command that starts a new funds transfer.
type StartTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferId    string `protobuf:"bytes,1,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
	FromAccountId string `protobuf:"bytes,2,opt,name=from_account_id,json=fromAccountId,proto3" json:"from_account_id,omitempty"`
	ToAccountId   string `protobuf:"bytes,3,opt,name=to_account_id,json=toAccountId,proto3" json:"to_account_id,omitempty"`
	AmountInCents int32  `protobuf:"varint,4,opt,name=amount_in_cents,json=amountInCents,proto3" json:"amount_in_cents,omitempty"`
}

func (x *StartTransfer) Reset() {
	*x = StartTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTransfer) ProtoMessage() {}

func (x *StartTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTransfer.ProtoReflect.Descriptor instead.
func (*StartTransfer) Descriptor() ([]byte, []int) {
	return file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_rawDescGZIP(), []int{0}
}

func (x *StartTransfer) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

func (x *StartTransfer) GetFromAccountId() string {
	if x != nil {
		return x.FromAccountId
	}
	return ""
}

func (x *StartTransfer) GetToAccountId() string {
	if x != nil {
		return x.ToAccountId
	}
	return ""
}

func (x *StartTransfer) GetAmountInCents() int32 {
	if x != nil {
		return x.AmountInCents
	}
	return 0
}

// TransferStarted is an event that occurs when a funds transfer is started.
type TransferStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferId    string `protobuf:"bytes,1,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
	FromAccountId string `protobuf:"bytes,2,opt,name=from_account_id,json=fromAccountId,proto3" json:"from_account_id,omitempty"`
	ToAccountId   string `protobuf:"bytes,3,opt,name=to_account_id,json=toAccountId,proto3" json:"to_account_id,omitempty"`
	AmountInCents int32  `protobuf:"varint,4,opt,name=amount_in_cents,json=amountInCents,proto3" json:"amount_in_cents,omitempty"`
}

func (x *TransferStarted) Reset() {
	*x = TransferStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferStarted) ProtoMessage() {}

func (x *TransferStarted) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferStarted.ProtoReflect.Descriptor instead.
func (*TransferStarted) Descriptor() ([]byte, []int) {
	return file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_rawDescGZIP(), []int{1}
}

func (x *TransferStarted) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

func (x *TransferStarted) GetFromAccountId() string {
	if x != nil {
		return x.FromAccountId
	}
	return ""
}

func (x *TransferStarted) GetToAccountId() string {
	if x != nil {
		return x.ToAccountId
	}
	return ""
}

func (x *TransferStarted) GetAmountInCents() int32 {
	if x != nil {
		return x.AmountInCents
	}
	return 0
}

// MarkTransferComplete is a command that marks a transfer as completed.
type MarkTransferComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferId string `protobuf:"bytes,1,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
}

func (x *MarkTransferComplete) Reset() {
	*x = MarkTransferComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkTransferComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkTransferComplete) ProtoMessage() {}

func (x *MarkTransferComplete) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkTransferComplete.ProtoReflect.Descriptor instead.
func (*MarkTransferComplete) Descriptor() ([]byte, []int) {
	return file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_rawDescGZIP(), []int{2}
}

func (x *MarkTransferComplete) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

// TransferCompleted is an event that occurs when a funds transfer is completed.
type TransferCompleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferId string `protobuf:"bytes,1,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
}

func (x *TransferCompleted) Reset() {
	*x = TransferCompleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCompleted) ProtoMessage() {}

func (x *TransferCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCompleted.ProtoReflect.Descriptor instead.
func (*TransferCompleted) Descriptor() ([]byte, []int) {
	return file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_rawDescGZIP(), []int{3}
}

func (x *TransferCompleted) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

var File_github_com_jmalloc_ax_examples_banking_messages_transfer_proto protoreflect.FileDescriptor

var file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x6d, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x2f, 0x61, 0x78, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x2f, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x61, 0x78, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x62, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0xa4, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x74, 0x6f, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xa6, 0x01, 0x0a,
	0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x6f, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x43, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x37, 0x0a, 0x14, 0x4d, 0x61, 0x72, 0x6b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x64, 0x22, 0x34,
	0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x49, 0x64, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6a, 0x6d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x2f, 0x61, 0x78, 0x2f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_rawDescOnce sync.Once
	file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_rawDescData = file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_rawDesc
)

func file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_rawDescGZIP() []byte {
	file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_rawDescOnce.Do(func() {
		file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_rawDescData)
	})
	return file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_rawDescData
}

var file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_goTypes = []interface{}{
	(*StartTransfer)(nil),        // 0: ax.examples.banking.StartTransfer
	(*TransferStarted)(nil),      // 1: ax.examples.banking.TransferStarted
	(*MarkTransferComplete)(nil), // 2: ax.examples.banking.MarkTransferComplete
	(*TransferCompleted)(nil),    // 3: ax.examples.banking.TransferCompleted
}
var file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_init() }
func file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_init() {
	if File_github_com_jmalloc_ax_examples_banking_messages_transfer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkTransferComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCompleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_goTypes,
		DependencyIndexes: file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_depIdxs,
		MessageInfos:      file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_msgTypes,
	}.Build()
	File_github_com_jmalloc_ax_examples_banking_messages_transfer_proto = out.File
	file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_rawDesc = nil
	file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_goTypes = nil
	file_github_com_jmalloc_ax_examples_banking_messages_transfer_proto_depIdxs = nil
}
